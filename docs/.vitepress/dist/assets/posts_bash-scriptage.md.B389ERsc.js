import{_ as s,c as a,ae as t,o as i}from"./chunks/framework.DxKT8lur.js";const m=JSON.parse('{"title":"Bash Scriptage","description":"","frontmatter":{"title":"Bash Scriptage","date":"2022-11-01","sidebar":true,"prev":false,"next":false,"tags":["bash","bash script","how-to create a bash script"]},"headers":[],"relativePath":"posts/bash-scriptage.md","filePath":"posts/bash-scriptage.md"}'),o={name:"posts/bash-scriptage.md"};function l(r,e,n,c,h,p){return i(),a("div",null,e[0]||(e[0]=[t(`<h1 id="bash-scriptage" tabindex="-1">Bash Scriptage <a class="header-anchor" href="#bash-scriptage" aria-label="Permalink to &quot;Bash Scriptage&quot;">​</a></h1><p>Bourne Again Shell (Bash) scripts are scripts of commands used on Unix terminals, like the Linux terminal.</p><p>It allows you to enter a list of commands (in sequence) just by typing the name of the Bash Script file.</p><p>For example, to open Firefox for Developers on Linux systems, you need to open the folder where it is at and double click de file called <code>firefox</code>.</p><p>To do it from the terminal, you need:</p><ul><li>Change Directory <code>cd</code> to the folder where <code>firefox</code> is;</li><li>Run <code>./firefox</code>.</li></ul><blockquote><p><code>./</code> means &quot;from this folder where i&#39;m&quot; + <code>/</code> to select file/folder you wish to work with.</p></blockquote><p>To achieve this, you just typed a few commands on the terminal. To do this with a single command, you need a Bash Script.</p><h2 id="how-to-create-a-bash-script" tabindex="-1">How to create a Bash Script <a class="header-anchor" href="#how-to-create-a-bash-script" aria-label="Permalink to &quot;How to create a Bash Script&quot;">​</a></h2><p>At your user home folder <code>$</code> (/home/user), create a file called <code>script.sh</code>.</p><blockquote><p>Your user home folder is usually where your terminal starts. Type <code>pwd</code> to check. It needs to be <code>/home/petry</code>, for example.</p></blockquote><p>Inside the <code>script.sh</code> write <code>#!/bin/sh</code> on the very first line. This will tell the terminal it is a Bash Script.</p><p>The first command of your script will be written above, and so on.</p><p>Example:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/sh</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aurora</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./firefox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span></span></code></pre></div><p>This is the same as: <code>cd aurora &amp;&amp; ./firefox &amp;</code>.</p><blockquote><p>In this case, is just two commands, but this can be used to create complex scripts, with logic operators and all that cool programming stuff.</p></blockquote><h2 id="bonus-how-to-create-symbolic-links-or-soft-links-to-folders-files-on-the-terminal" tabindex="-1">Bonus: how to create symbolic &#39;links&#39;, or soft links, to folders/files on the terminal <a class="header-anchor" href="#bonus-how-to-create-symbolic-links-or-soft-links-to-folders-files-on-the-terminal" aria-label="Permalink to &quot;Bonus: how to create symbolic &#39;links&#39;, or soft links, to folders/files on the terminal&quot;">​</a></h2><p>As you can see on the example, the first command on the script is <code>cd aurora</code>. Aurora is the nickname for the Firefox for Developers, and this folder is actually <code>/home/petry/aurora/</code>.</p><p>This is a link. To create one, you will need the <code>ln</code> command. Like:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [path] [symbolic name]</span></span></code></pre></div><p>Example:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/petry/aurora/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aurora</span></span></code></pre></div><blockquote><p>This is starting to look like magic...</p></blockquote><div class="wisdom"><img class="wisdony" src="https://upload.wikimedia.org/wikipedia/commons/9/9f/Pents02.jpg" alt=""></div>`,25)]))}const u=s(o,[["render",l]]);export{m as __pageData,u as default};
